2011-01-11  GoldenKevin  (revision 1)

	Automatically created /trunk directory. We recommend you to put all your
	code there

2011-01-22  GoldenKevin  (revision 2)

	* Initial import. Things currently working:
		* Inter server communications between a central server and remote
		servers.
		* Loading of Item.wz, Map.wz, Mob.wz, Reactor.wz, Skill.wz, and
		String.wz data files in KVJ format. MCDB support soon to come with XML
		and WZ support planned in the long run.
		* Game, login, and shop servers can listen and decode packets received
		from MapleStory clients, but do not process anything yet. There has been
		a little headway in login server packet handling.
		* A code stub for a telnet acceptor on the center server. It accepts
		connections but there are many things that need to be done before I can
		even think about implementing commands on it.
	Some more work has to be done on the actual client and server communications
	frameworks, but once that is done, I will start working on implementing
	packet handlers in the login server first. A lot of low level code was taken
	from OdinMS-derived sources in order to speed up development. Thanks guys!

2011-01-22  GoldenKevin  (revision 3)

	* Added AGPLv3 license headers to all Java source files.

2011-01-23  GoldenKevin  (revision 4)

	* Removed "argonms.*.data.dir" for all client listening servers because it
	is no longer used (Please specify the data directory with the System
	property "argonms.data.dir")
	* Added MCDB loading for maps data. Item data is soon to come followed by
	the rest.
	* Added error checking for KVJ loaders. When a piece of data doesn't exist,
	the entry in the caches will be null and the load methods will no longer
	throw FileNotFoundExceptions.
	* String data now has to be preloaded on any server that uses it.
	* Every data cache object now has a protected access modifier for all of
	their mutator methods and for their constructor, while only their accessor
	methods have public access. This way, the dynamically loaded data containing
	these static cache objects cannot modify them for the other dynamic data
	that use the same cache.

2011-01-23  GoldenKevin  (revision 5)

	* Finished MCDB data loader for items.
	* Merged WzDatabaseConnection into DatabaseConnection.
	* Refactored DatabaseConnection to be more efficient I suppose?

2011-01-25  GoldenKevin  (revision 6)

	* Added MCDB data loading for strings.
	* Please note that a new version of KVJ compiler is released. Please
	recompile all KVJ files!
	* I think I forgot all about how ThreadLocal worked when I created those
	MCDB data loading classes... anyway, the getWzConnection() is called at each
	method call now instead of being stored as a single instance variable for
	all threads.
	* Made constructors of all data loaders to protected and added
	(instance == null) check for every setInstance method just so nobody
	"accidentally" creates more than one instance of those singleton classes. I
	don't mistake you guys as idiots, it's just a safe programming practice.
	* Added MCDB loading for mobs and skills and enabled loading for strings
	(a whoops from the last revision).
	* All data loaders have an canLoad() method now to check if the data for an
	object exists (all except for String apparently). Note that this is not an
	exists() method, i.e. MCDB skills will return true even if the skill does
	not exist as long as there are other skills with the same 3 digit prefix. It
	only determines whether a piece of data can be loaded.
	* In Skill data loader, the player skill operations are now separated from
	those of mob skills, as they rightfully should be.
	* I'm really getting ahead of myself by adding a MapFactory instance
	variable in argonms.game.WorldChannel.

2011-01-29  GoldenKevin  (revision 7)

	* Made some progress on the Telnet listener. Now special telnet chars
	( > 0x7F) are handled properly and won't be in the ASCII string. Just a few
	more tweaks to the way some ASCII chars are handled and it will be ready...
	* Fixed NullPointerException in SkillDataLoader.
	* Fixed MCDB loading of mobs and skills.
	* Added classes for inventory (items, equips, pets, rings, etc.) and moved
	Player class from argonms.game to argonms.character.
	* Support for KvjCompiler r14. Changes include Character.wz compiling and
	reduced size of Mob files.
	* Character.wz is now processed in KvjItemDataLoader. Taming Mob IDs are now
	read in McdbItemDataLoader as well. In McdbItemDataLoader, equips can now be
	made tradeBlocked.

2011-02-04  GoldenKevin  (revision 8)

	* Fixed some inconsistencies when passing java.awt.Point/(x,y) parameters to
	mutator methods in data loader objects. Now all parameters are passed as
	x and y integers to reduce imports.
	* Renamed IItem to InventorySlot. Equips don't have any bonuses for "hands"
	so that was removed from the Equip class. Inventory class now implemented.
	Pets now are implemented and Rings have been updated.
	* Player class has been implemented enough for Login Server usage. Some code
	was copied directly from OdinMS, so some stuff needed for the Game Server
	do not work yet or are inefficient (ahem, MapleMap.nearestSpawnPoint).
	* Login server now has matured to a point where the client can be
	transferred to the game server! Characters can be created and loaded from
	world charlists and global charlists. Fixed some
	ArrayIndexOutOfBoundExceptions caused by off by one errors.
	* Refactored Game Server accept in Login Server. Now the IP address of each
	world is resolved upon their connection so we won't have to do it every time
	a client selects a character in the Login Server.
	* GameClient has been updated. There are small stubs of code for Game Server
	loading of a player (copied directly from OdinMS), although there's still a
	long way before the player can actually be placed in a map.
	* Added a CheatTracker class that does... nothing! Yet.

2011-02-12  GoldenKevin  (revision 9)

	* Fixed logging of unhandled packets from clients.
	* Moved argonms.net.client.ClientLoginPacketProcessor
	to argonms.login.ClientLoginPacketProcessor
	* Moved argonms.net.client.ClientGamePacketProcessor
	to argonms.game.ClientGamePacketProcessor
	* Moved argonms.net.client.ClientShopPacketProcessor
	to argonms.shop.ClientShopPacketProcessor
	* Moved several constants from KvjEffects to StatEffects because their use
	wasn't limited to KVJ effects loading.
	* Added accessor methods to MobSkillEffect and StatEffects. Lt and Rb
	mutator methods for MobSkillEffects now accept two shorts instead of a Point
	* Fixed negative array index size occurring when packet length was greater
	than the maximum value (127) of a signed 8-bit integer (byte).
	* Fixed finding the next free item position in inventory
	(Inventory.getFreeSlots). First item is 1, not 0!
	* Added Taming Mobs/Mounts as another inventory item type. Hopefully, this
	should be the last one as the inheritance for InventorySlot is getting
	complicated...
	* Player can now enter a map in the GameServer. While they can move, they
	can't see other players and other players can't see them. They cannot
	interact with anything or change maps/channels and there are no spawns for
	NPCs/Mobs. All of these additions will come gradually.

2011-02-19  GoldenKevin  (revision 10)

	* Fixed bug in LittleEndianByteArrayWriter. If a large enough byte array was
	copied to a small buffer, there was an ArrayIndexOutOfBoundsException. Also,
	a one byte long LittleEndianByteArrayWriter can now grow!
	* Renamed MapleMap to GameMap.
	* You can now see other players moving around in a map (you can't see them
	attacking yet though). NPCs are visible (at least in map 0), but I think
	mobs currently crash clients. Portals still don't work yet... A lot of
	credit should go to OdinMS for this particular update!
	* Made some progress on making a scripting interface for NPCs. I think I
	might actually write my own language if I don't find ways to circumvent my
	current issues with it. A sample 2100.js script is included.
	* Added code stubs for NPC shops. It should be easy to implement later on.
	* Refactored map object related code. Players now keep their charid in the
	MapObject class (referred to as an "object id"). I think MapObjects are a
	bit more modular/OO now...
	* Fixed bug where an account was recorded as being logged in even if their
	login attempt was not successful. Also fixed a client error reading bug.
	* canLoad methods for the data loaders now check if the stats are in the
	cache before delving into their IO routines.
	* And a whole lot of other bug fixes/improvements on things that I was not
	able to spot before.
	Kvj structure updated - Update your KvjCompiler and recompile your data.
	Consult the KvjBin changelog to see a list of changes in r15.

2011-02-21  GoldenKevin  (revision 11)

	* Improved "say" commands for NPC scripts. Now the "prev" button is handled
	correctly, although you have to keep in mind special cases and limitations.
	(read the comments in NpcConversationActions for more details).
	* Mozilla's latest version of Rhino (1.72R2) is now used instead of Java 6's
	modified version 1.6R2 in javax.script. 1.72R2 is much more flexible and
	contains features that I needed for efficient stateless NPC scripts. Now
	endChat hooks are supported and each NPC script doesn't require a dedicated
	thread anymore. Updated Sera script to show a bit of it's capabilities.
	(you don't have to have a endChat function and scripts don't need any
	functions. Just be sure to call the function in the global scope if you do
	want to invoke one). Be sure your classpath now includes Rhino's js.jar.
	* A bunch of other code stubs for map/channel changing, and for channel
	variables (e.g. exp, meso, and drop rates) that I will finish in the future.
	Some routines that were previously LoginClient specific are now common.

2011-02-23  GoldenKevin  (revision 12)

	* Replaced isSealed() checks with our own boolean instance variable in
	NpcConversationActions. I realized you can't seal it before throwing the
	continuation, but I can't throw the continuation before sealing it. I didn't
	catch this before because it's a very rare occurrence to have the script
	forcefully halted while in the middle of evaluation (and not while waiting
	for a response) - Rhino/JavaScript isn't THAT slow. I'm probably going to
	have to also synchronize the terminated variable, but I will leave it the
	way it is until I start get cases of it acting up.
	* NpcConversationActions.askAvatar now returns the player's selection.
	* Some InventorySlot changes. Unique IDs are now long. Corrected pet packet
	structure - footholds are now short, and the other two bytes were actually
	bools. Ring's partnerRingUid are now long (even though the current packet
	structure for rings gives it as an int).
	* Renamed GameHandler to GameEnterHandler to disambiguate it's purpose
	somewhat (since it handles connections and map entering).
	* Completely rewrote interserver communication to accommodate splitted
	worlds, i.e. so that all channels of one world don't have to be running on
	the same process (so that channels can be spread out across many servers).
	Modified game0.properties, game1.properties, and added game2.properties to
	demonstrate how to use the new features.
	* Restructured classes for interserver communications. Classes only required
	by the Center Server are now in the argonms.center package, and only the
	classes required by the remote servers (e.g. abstract classes) or required
	by both the Center Server and remote servers (e.g. packet header values) are
	located in argonms.net.server. Many classes have been renamed and overall
	there has been a huge refactoring in the structure.

2011-02-23  GoldenKevin  (revision 13)

	* Some code cleanup after that large revision I just previously committed.
	* Channel changing is now supported. Portals can now be entered and you will
	be properly warped (clients still crash when they encounter mobs though, I'm
	working on that fix right now...)
	* Renamed argonms.game.npcscript to argonms.game.script. Added a new class
	for Portal scripts and updated NpcScriptManager with quest script stubs in
	order to support quests in the future.

Copyright 2011 GoldenKevin
Copying and distribution of this file, with or without modification, are
permitted provided the copyright notice and this notice are preserved.
